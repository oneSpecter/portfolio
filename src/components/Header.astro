---
import { siteConfig } from "../config";

const hasProjects = siteConfig.projects && siteConfig.projects.length > 0;
const hasExperience = siteConfig.experience && siteConfig.experience.length > 0;
const hasEducation = siteConfig.education && siteConfig.education.length > 0;
---

<header
  id="header"
  style={`--accent-color: ${siteConfig.accentColor}; --dkbg-color: ${siteConfig.dkbackgroundColor};`}
  class="fixed top-0 left-0 right-0 z-50 bg-[#f5f5f5]/70 dark:bg-[#000015]/70 backdrop-blur-sm transition-colors duration-300"
>
  <nav
    class="max-w-7xl mx-auto px-8 py-4 relative flex justify-center items-center"
  >
    <!-- Menu centrato -->
    <ul class="flex items-center gap-8">
      <li>
        <a
          href="#about"
          class="text-black hover:text-[var(--accent-color)] dark:text-white dark:hover:text-[var(--accent-color)] transition-colors font-medium"
        >
          About
        </a>
      </li>
      {
        hasProjects && (
          <li>
            <a
              href="#projects"
              class="text-black hover:text-[var(--accent-color)] dark:text-white dark:hover:text-[var(--accent-color)] transition-colors font-medium"
            >
              Projects
            </a>
          </li>
        )
      }
      {
        hasExperience && (
          <li>
            <a
              href="#experience"
              class="text-black hover:text-[var(--accent-color)] dark:text-white dark:hover:text-[var(--accent-color)] transition-colors font-medium"
            >
              Experience
            </a>
          </li>
        )
      }
      {
        hasEducation && (
          <li>
            <a
              href="#education"
              class="text-black hover:text-[var(--accent-color)] dark:text-white dark:hover:text-[var(--accent-color)] transition-colors font-medium"
            >
              Education
            </a>
          </li>
        )
      }
    </ul>

    <!-- Switch tema a destra -->
    <button
      id="theme-toggle"
      class="absolute right-8 top-1/2 -translate-y-1/2 p-2 rounded text-black hover:text-[var(--accent-color)] dark:text-white dark:hover:text-[var(--accent-color)] transition-colors"
      aria-label="Toggle dark mode"
      type="button"
    >
      <svg
        id="theme-icon"
        xmlns="http://www.w3.org/2000/svg"
        class="h-6 w-6"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <!-- Icona inserita da JS -->
      </svg>
    </button>
  </nav>
</header>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const iconSun = `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v2.25m6.364.386-1.591 1.591M21 12h-2.25m-.386 6.364-1.591-1.591M12 18.75V21m-4.773-4.227-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 1 1-7.5 0 3.75 3.75 0 0 1 7.5 0Z"></path>`;
    const iconMoon = `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12.79A9 9 0 1111.21 3a7 7 0 109.79 9.79z" />`;

    const html = document.documentElement;
    const themeToggle = document.getElementById("theme-toggle");
    const themeIcon = document.getElementById("theme-icon");

    function setIcon() {
      const isDark = html.classList.contains("dark");
      themeIcon.innerHTML = isDark ? iconSun : iconMoon;
    }

    function applyThemeFromStorage() {
      if (
        localStorage.theme === "dark" ||
        (!("theme" in localStorage) &&
          window.matchMedia("(prefers-color-scheme: dark)").matches)
      ) {
        html.classList.add("dark");
      } else {
        html.classList.remove("dark");
      }
      setIcon();
    }

    function toggleTheme() {
      const isDark = html.classList.contains("dark");
      html.classList.toggle("dark", !isDark);
      localStorage.theme = isDark ? "light" : "dark";
      setIcon();
    }

    // Applica tema iniziale
    applyThemeFromStorage();

    // Listener bottone
    themeToggle?.addEventListener("click", toggleTheme);
  });
</script>

<style>
  html {
    scroll-behavior: smooth;
  }
</style>
